/**
 * Naive parser that returns an object fitted for D3 rendering
 *
 * expects an object (JSON parse beforehand if necessary)
 * @param {Object} input layout of the object to be parsed
 */

// #TODO parser duplicates keys, eg. Launch:62 => Launch:62 => mission => mission, etc.
// needs to be fixed to only show one key
// #TODO: parsing needs to happen in the MainContainer, and the parsed data needs to be passed
// down to the view components; as it stands ReactJson is displaying unparsed data

// function parse(name, input) {
//   let result = new Data(name);
//   result.children = [];
//   for (const key in input) {
//     // filter out keys starting with '$' and '__typename' generated by Apollo
//     if (!key.startsWith('$') && key !== '__typename') {
//       const newChild = new Data(key);
//       if (typeof input[key] === 'string') {
//         newChild.value = input[key];
//       } else {
//         newChild.children = [];
//         newChild.children.push(parse(key, input[key]));
//       }

//       result.children.push(newChild);
//     }
//   }
//   return result;
// }

// Tree structure from data
function Data(name) {
  this.name = name;
  this.markedInSearch = false;
}

function parse(name = 'App', input) {
  let result = new Data(name);
  result.children = new Array(0);
  for (let el of Object.entries(input)) {
    // filter out keys starting with '$' and '__typename' generated by Apollo
    if (typeof el[1] === 'object') {
      result.children.push(parse(el[0], el[1]));
    } else {
      let newChild = new Data(el[0]);
      newChild.value = el[1];
      result.children.push(newChild);
    }
  }
  return result;
}

export { parse, Data };
